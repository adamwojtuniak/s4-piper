/*
 * Copyright 2010 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 *
 *
 */

defaultTasks 'assemble'

archivesBaseName = 's4'

// Include Linkedin plugins.
buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
      classpath 'org.linkedin:org.linkedin.gradle-plugins:1.5.0'
    }
}

/* All project libraries must be defined here. */
 libraries = [
 modules:            'org.jboss.modules:jboss-modules:1.0.2.GA',
 felix:              'org.apache.felix:org.apache.felix.main:4.0.0',
 felix_file_install: 'org.apache.felix:org.apache.felix.fileinstall:3.1.10',
 felix_scr:          'org.apache.felix:org.apache.felix.scr:1.6.0',
 felix_gogo_shell:   'org.apache.felix:org.apache.felix.gogo.shell:0.10.0',
 felix_gogo_runtime: 'org.apache.felix:org.apache.felix.gogo.runtime:0.10.0',
 felix_gogo_command: 'org.apache.felix:org.apache.felix.gogo.command:0.12.0',
 felix_shell:        'org.apache.felix:org.apache.felix.shell:1.4.2',
 osgi_compendium:    'org.apache.felix:org.osgi.compendium:1.4.0',
 json:               'org.json:json:20090211',
 guava:              'com.google.guava:guava:r09',
 gson:               'com.google.code.gson:gson:1.6',
 guice:              'com.google.inject:guice:3.0',
 guice_assist:       'com.google.inject.extensions:guice-assistedinject:3.0',
 guice_grapher:      'com.google.inject:guice-grapher:3.0',
 flexjson:           'net.sf.flexjson:flexjson:2.1',
 bcel:               'org.apache.bcel:bcel:5.2',
 jakarta_regexp:     'jakarta-regexp:jakarta-regexp:1.4',
 kryo:               'com.googlecode:kryo:1.04',
 netty:              'org.jboss.netty:netty:3.2.5.Final',
 reflectasm:         'com.esotericsoftware:reflectasm:0.8',
 minlog:             'com.esotericsoftware:minlog:1.2',
 asm:                'asm:asm:3.2',
 commons_io:         'commons-io:commons-io:2.0.1',
 commons_config:     'commons-configuration:commons-configuration:1.6',
 commons_codec:      'commons-codec:commons-codec:1.4',
 commons_httpclient: 'commons-httpclient:commons-httpclient:3.1',
 commons_coll:       'net.sourceforge.collections:collections-generic:4.01', // Use this lib until the commons collection with Generics is released.
 slf4j:              'org.slf4j:slf4j-api:1.6.1',
 logback_core:       'ch.qos.logback:logback-core:0.9.29',
 logback_classic:    'ch.qos.logback:logback-classic:0.9.29',
 ejml:               'com.googlecode.efficient-java-matrix-library:ejml:0.17',
 jcip:               'net.jcip:jcip-annotations:1.0',
 junit:              'junit:junit:4.10',
 linkedin_gradle:    'org.linkedin:org.linkedin.gradle-plugins:1.5.0',
 //osgi bundles
 aopalliance:        'org.aopalliance:com.springsource.org.aopalliance:1.0.0',
 javax_inject:       'javax.inject:com.springsource.javax.inject:1.0.0'
 ]
 
allprojects {
    group = 'io.s4'
   
    /* Search these repos to find artifacts. Gradle will download and cache. */
    repositories {
    mavenLocal()
    mavenCentral()
    mavenRepo name: "gson", urls: "http://google-gson.googlecode.com/svn/mavenrepo"
    mavenRepo name: "sbr", urls: ["http://repository.springsource.com/maven/bundles/release","http://repository.springsource.com/maven/bundles/external"]

    /* Add lib dir as a repo. Some jar files that are not available
    in a public repo are distributed in the lib dir. */
    flatDir name: 'libDir', dirs: "$rootDir/lib"
    }

    version = this.version
}



subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    /* Set Java version. */
    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    dependencies {

        /* Google. */
        compile( libraries.guava )
        compile( libraries.guice )

        /* Logging. */
        compile( libraries.slf4j )
        compile( libraries.logback_core )
        compile( libraries.logback_classic )

        /* Commons. */
        compile( libraries.commons_io )
        compile( libraries.commons_config )
        compile( libraries.commons_coll )

        /* Misc. */
        compile( libraries.jcip )

        /* Testing. */
        testCompile( libraries.junit )

        runtime( libraries.felix_scr )
        runtime( libraries.felix_gogo_runtime )
        runtime( libraries.felix_gogo_shell )
        runtime( libraries.felix_gogo_command )
        runtime( libraries.felix_shell )
        runtime( libraries.osgi_compendium )
        runtime( libraries.aopalliance )
        runtime( libraries.javax_inject )
    }

    jar {
        manifest.attributes provider: 's4'
    }
    
    task createRepo(dependsOn: configurations.default.buildArtifacts, type: Copy) {
      into "../bundles"
      from configurations.default
      from configurations.default.allArtifactFiles
    }

}
